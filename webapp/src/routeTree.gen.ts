/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'

const BoardsIndexLazyRouteImport = createFileRoute('/boards/')()
const AboutIndexLazyRouteImport = createFileRoute('/about/')()
const BoardsBoardIdLazyRouteImport = createFileRoute('/boards/$boardId')()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BoardsIndexLazyRoute = BoardsIndexLazyRouteImport.update({
  id: '/boards/',
  path: '/boards/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/boards/index.lazy').then((d) => d.Route))
const AboutIndexLazyRoute = AboutIndexLazyRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about/index.lazy').then((d) => d.Route))
const BoardsBoardIdLazyRoute = BoardsBoardIdLazyRouteImport.update({
  id: '/boards/$boardId',
  path: '/boards/$boardId',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/boards/$boardId.lazy').then((d) => d.Route),
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/boards/$boardId': typeof BoardsBoardIdLazyRoute
  '/about': typeof AboutIndexLazyRoute
  '/boards': typeof BoardsIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/boards/$boardId': typeof BoardsBoardIdLazyRoute
  '/about': typeof AboutIndexLazyRoute
  '/boards': typeof BoardsIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/boards/$boardId': typeof BoardsBoardIdLazyRoute
  '/about/': typeof AboutIndexLazyRoute
  '/boards/': typeof BoardsIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/boards/$boardId' | '/about' | '/boards'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/boards/$boardId' | '/about' | '/boards'
  id: '__root__' | '/' | '/boards/$boardId' | '/about/' | '/boards/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BoardsBoardIdLazyRoute: typeof BoardsBoardIdLazyRoute
  AboutIndexLazyRoute: typeof AboutIndexLazyRoute
  BoardsIndexLazyRoute: typeof BoardsIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/boards/': {
      id: '/boards/'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof BoardsIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/boards/$boardId': {
      id: '/boards/$boardId'
      path: '/boards/$boardId'
      fullPath: '/boards/$boardId'
      preLoaderRoute: typeof BoardsBoardIdLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BoardsBoardIdLazyRoute: BoardsBoardIdLazyRoute,
  AboutIndexLazyRoute: AboutIndexLazyRoute,
  BoardsIndexLazyRoute: BoardsIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
